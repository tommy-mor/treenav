(require 'tree-sitter)
(defun tree-sitter-mark-bigger-node ()
  (interactive)
  (let* ((p (point))
		 (m (or (mark) p))
		 (beg (min p m))
		 (end (max p m))
		 (root (ts-root-node tree-sitter-tree))
		 (node (ts-get-descendant-for-position-range root beg end))
		 (node-beg (ts-node-start-position node))
		 (node-end (ts-node-end-position node)))
	;; Node fits the region exactly. Try its parent node instead.
	(message "st")
	(when (and (= beg node-beg) (= end node-end))
	  (when-let ((node (ts-get-parent node)))
		(setq node-beg (ts-node-start-position node)
			  node-end (ts-node-end-position node))))
	(set-mark node-end)
	(goto-char node-beg)))

(defun tmy-select-node (node)
  (let* ((node-beg (tsc-node-start-position node))
		 (node-end (tsc-node-end-position node)))
	(set-mark node-end)
	(goto-char node-beg)))

(defun tmy-cursor-node ()
  ;; Get the syntax node the cursor is on.
  (let ((p (point)))
	(tsc-get-descendant-for-position-range
	 (tsc-root-node tree-sitter-tree) p p)))

(defun tmy-mark-node ()
  (interactive)
  (let ((node (tmy-cursor-node)))
	(message (tsc-node-to-sexp node))
	(tmy-select-node node)
	(setq tmy-cursor-node node)
	))

(defun do-until-selection-changes (fn)
  (interactive)
  (defun go (fn oldbeg oldend)
	(let* ((newbeg (ts-node-start-position tmy-cursor-node))
		   (newend (ts-node-end-position tmy-cursor-node)))
	  (when (and (= newbeg oldbeg) (= newend oldend))
		(funcall fn)
		(go fn newbeg newend))))

  (let* ((node-beg (ts-node-start-position tmy-cursor-node))
		 (node-end (ts-node-end-position tmy-cursor-node)))
	(funcall fn)
	(go fn node-beg node-end)))
										; keep going up until selections changes
(defun tmy-select-parent ()
  (message "called")
  (setq tmy-cursor-node (tsc-get-parent tmy-cursor-node))
  (tmy-select-node tmy-cursor-node))

(defun tree-sitter-mark-node-old ()
										;(message (tsc-tree-to-sexp tree-sitter-tree))
  (interactive)
  (let* ((p (point))
		 (m (or (mark) p))
		 (beg (min p m))
		 (end (max p m))
		 (root (tsc-root-node tree-sitter-tree))
		 (node (tsc-get-descendant-for-position-range root beg end))
		 (node-beg (tsc-node-start-position node))
		 (node-end (tsc-node-end-position node)))
	;; Node fits the region exactly. Try its parent node instead.
										;(setq node-beg (ts-node-start-position node)
										;node-end (ts-node-end-position node))
	(set-mark node-end)
	(goto-char node-beg)))

(defun tmy-select-up ()
  (interactive)
  (do-until-selection-changes 'tmy-select-parent))

(defhydra symex2 (global-map "<f2>")
  "navigate"
  ("h" tmy-select-up "out")
  ("m" tmy-mark-node "mark")
  ("e" text-scale-decrease "out")
  ("i" text-scale-decrease "out")
  )
